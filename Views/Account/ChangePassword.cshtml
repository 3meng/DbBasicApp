@model ChangePasswordViewModel

@{
    ViewData["Title"] = "修改密码";
}

<h2>@(ViewData["Title"])</h2>
<form asp-action="ChangePassword" asp-controller="Account" asp-anti-forgery="true" method="post" class="form-horizontal" role="post">
    <h4>修改您的登录密码，修改成功之后需要重新登录</h4>
    <hr />
    <div asp-validation-summary="ValidationSummary.ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="CurrentPassword" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="CurrentPassword" autofocus="autofocus" class="form-control" />
            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="NewPassword" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="NewPassword" class="form-control" />
            <span asp-validation-for="NewPassword" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="ConfirmPassword" class="form-control" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">修改密码</button>
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
